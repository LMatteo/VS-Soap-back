//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonitorGUI.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMonitorService")]
    public interface IMonitorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/NbRequest", ReplyAction="http://tempuri.org/IMonitorService/NbRequestResponse")]
        int NbRequest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/NbRequest", ReplyAction="http://tempuri.org/IMonitorService/NbRequestResponse")]
        System.Threading.Tasks.Task<int> NbRequestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/AverageExecTime", ReplyAction="http://tempuri.org/IMonitorService/AverageExecTimeResponse")]
        long AverageExecTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/AverageExecTime", ReplyAction="http://tempuri.org/IMonitorService/AverageExecTimeResponse")]
        System.Threading.Tasks.Task<long> AverageExecTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/getCityCacheRefreshTime", ReplyAction="http://tempuri.org/IMonitorService/getCityCacheRefreshTimeResponse")]
        int getCityCacheRefreshTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/getCityCacheRefreshTime", ReplyAction="http://tempuri.org/IMonitorService/getCityCacheRefreshTimeResponse")]
        System.Threading.Tasks.Task<int> getCityCacheRefreshTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/setCityCacheRefreshTime", ReplyAction="http://tempuri.org/IMonitorService/setCityCacheRefreshTimeResponse")]
        void setCityCacheRefreshTime(int time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/setCityCacheRefreshTime", ReplyAction="http://tempuri.org/IMonitorService/setCityCacheRefreshTimeResponse")]
        System.Threading.Tasks.Task setCityCacheRefreshTimeAsync(int time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/getStationCacheRefreshTime", ReplyAction="http://tempuri.org/IMonitorService/getStationCacheRefreshTimeResponse")]
        int getStationCacheRefreshTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/getStationCacheRefreshTime", ReplyAction="http://tempuri.org/IMonitorService/getStationCacheRefreshTimeResponse")]
        System.Threading.Tasks.Task<int> getStationCacheRefreshTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/setStationCacheRefreshTime", ReplyAction="http://tempuri.org/IMonitorService/setStationCacheRefreshTimeResponse")]
        void setStationCacheRefreshTime(int time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/setStationCacheRefreshTime", ReplyAction="http://tempuri.org/IMonitorService/setStationCacheRefreshTimeResponse")]
        System.Threading.Tasks.Task setStationCacheRefreshTimeAsync(int time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/getMaxExecTime", ReplyAction="http://tempuri.org/IMonitorService/getMaxExecTimeResponse")]
        long getMaxExecTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/getMaxExecTime", ReplyAction="http://tempuri.org/IMonitorService/getMaxExecTimeResponse")]
        System.Threading.Tasks.Task<long> getMaxExecTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/getMinExecTime", ReplyAction="http://tempuri.org/IMonitorService/getMinExecTimeResponse")]
        long getMinExecTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/getMinExecTime", ReplyAction="http://tempuri.org/IMonitorService/getMinExecTimeResponse")]
        System.Threading.Tasks.Task<long> getMinExecTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/getUrlList", ReplyAction="http://tempuri.org/IMonitorService/getUrlListResponse")]
        string[] getUrlList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/getUrlList", ReplyAction="http://tempuri.org/IMonitorService/getUrlListResponse")]
        System.Threading.Tasks.Task<string[]> getUrlListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMonitorServiceChannel : MonitorGUI.ServiceReference1.IMonitorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MonitorServiceClient : System.ServiceModel.ClientBase<MonitorGUI.ServiceReference1.IMonitorService>, MonitorGUI.ServiceReference1.IMonitorService {
        
        public MonitorServiceClient() {
        }
        
        public MonitorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MonitorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int NbRequest() {
            return base.Channel.NbRequest();
        }
        
        public System.Threading.Tasks.Task<int> NbRequestAsync() {
            return base.Channel.NbRequestAsync();
        }
        
        public long AverageExecTime() {
            return base.Channel.AverageExecTime();
        }
        
        public System.Threading.Tasks.Task<long> AverageExecTimeAsync() {
            return base.Channel.AverageExecTimeAsync();
        }
        
        public int getCityCacheRefreshTime() {
            return base.Channel.getCityCacheRefreshTime();
        }
        
        public System.Threading.Tasks.Task<int> getCityCacheRefreshTimeAsync() {
            return base.Channel.getCityCacheRefreshTimeAsync();
        }
        
        public void setCityCacheRefreshTime(int time) {
            base.Channel.setCityCacheRefreshTime(time);
        }
        
        public System.Threading.Tasks.Task setCityCacheRefreshTimeAsync(int time) {
            return base.Channel.setCityCacheRefreshTimeAsync(time);
        }
        
        public int getStationCacheRefreshTime() {
            return base.Channel.getStationCacheRefreshTime();
        }
        
        public System.Threading.Tasks.Task<int> getStationCacheRefreshTimeAsync() {
            return base.Channel.getStationCacheRefreshTimeAsync();
        }
        
        public void setStationCacheRefreshTime(int time) {
            base.Channel.setStationCacheRefreshTime(time);
        }
        
        public System.Threading.Tasks.Task setStationCacheRefreshTimeAsync(int time) {
            return base.Channel.setStationCacheRefreshTimeAsync(time);
        }
        
        public long getMaxExecTime() {
            return base.Channel.getMaxExecTime();
        }
        
        public System.Threading.Tasks.Task<long> getMaxExecTimeAsync() {
            return base.Channel.getMaxExecTimeAsync();
        }
        
        public long getMinExecTime() {
            return base.Channel.getMinExecTime();
        }
        
        public System.Threading.Tasks.Task<long> getMinExecTimeAsync() {
            return base.Channel.getMinExecTimeAsync();
        }
        
        public string[] getUrlList() {
            return base.Channel.getUrlList();
        }
        
        public System.Threading.Tasks.Task<string[]> getUrlListAsync() {
            return base.Channel.getUrlListAsync();
        }
    }
}
